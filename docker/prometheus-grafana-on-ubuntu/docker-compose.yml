version: '2'

volumes:
  prometheus_data: {}
  grafana_data: {}
  db-data: {}

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus:v2.0.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention=72h'
      - '--storage.tsdb.path=/prometheus'
    links:
      - cadvisor
      - alertmanager
      - adapter
    networks:
      - back-tier
    depends_on:
      - adapter
      - cadvisor

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:v0.15.1
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    # command:
      # - '--collector.procfs=/host/proc'
      # - '--collector.sysfs=/host/sysfs'
      # - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    #   - '--collector.textfile.directory=/home/collector'
    #   - '--collectors.enabled=conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat'
    expose:
      - 9100
    networks:
      - back-tier
    restart: always

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.9.1
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'

  cadvisor:
    container_name: cadvisor
    image: google/cadvisor:v0.28.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
      - '-docker_only'
    networks:
      - back-tier

  grafana:
    container_name: grafana
    image: grafana/grafana:4.6.1
    env_file:
      ./grafana/env
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - back-tier

  nginx:
    container_name: nginx
    image: nginx:1.13.6-alpine
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/conf.d:/etc/nginx/conf.d
      - ./nginx/_log:/var/log/nginx
    ports:
      - 9090:9090   # prometheus
      - 8080:8080   # cadvisor
      - 3000:3000   # grafana
      - 18080:18080 # adminer
    links:
      - grafana
    networks:
      - back-tier
      - front-tier

  adapter:
    image: timescale/prometheus-postgresql-adapter:master
    container_name: adapter
    command:
      - '-pg-host=pgsql'
      - '-pg-user=prometheus'
      - '-pg-password=password'
      # - '-pg-database=prometheus'
    links:
      - pgsql
    depends_on:
      - pgsql
    networks:
      - back-tier
    restart: always

  pgsql:
    image: timescale/pg_prometheus:master
    container_name: pgsql
    command:
      - '-csynchronous_commit=off'
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=prometheus
    volumes:
      - ./pgsql/initdb.d:/docker-entrypoint-initdb.d
      - ./pgsql/pg_prometheus.control:/usr/local/share/postgresql/extension/pg_prometheus.control
      - db-data:/var/lib/postgresql/data:rw
    networks:
      - back-tier
    restart: always

  adminer:
    image: adminer:4.3.1
    container_name: adminer
    links:
      - pgsql
    depends_on:
      - pgsql
    networks:
      - back-tier
